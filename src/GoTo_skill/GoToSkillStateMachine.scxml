<?xml version="1.0" encoding="UTF-8"?>
<scxml xmlns="http://www.w3.org/2005/07/scxml" version="1.0" binding="early" xmlns:qt="http://www.qt.io/2015/02/scxml-ext" name="GoToSkillStateMachine" datamodel="cplusplus:GoToSkillDataModel:GoToSkillDataModel.h" qt:editorversion="4.11.0" initial="wrapper">
    <qt:editorinfo initialGeometry="2927.51;-805.82;-20;-20;40;40"/>
    <state id="halted">
        <qt:editorinfo scenegeometry="2960.10;198.42;2900.10;148.42;120;100" geometry="2960.10;198.42;-60;-50;120;100"/>
        <onentry>
            <log label="halted" expr="&quot;Inside halted&quot;"/>
            <script>Connector connection(client_port.getName(), &quot;/GoToComponent&quot;, &quot;tcp&quot;);
                goTo.halt(location);</script>
            <send event="RESET" delay="2s"/>
        </onentry>
        <onexit>
            <log label="halted" expr="&quot;Leaving halted&quot;"/>
        </onexit>
        <transition type="internal" event="RESET" target="wrapper"/>
    </state>
    <state id="wrapper" initial="wrapperLock">
        <qt:editorinfo scenegeometry="81.58;-179.65;-302.96;-1238.25;2987.94;2674.91" geometry="81.58;-179.65;-384.54;-1058.60;2987.94;2674.91"/>
        <onentry>
            <log label="wrapper" expr="&quot;Inside wrapper&quot;"/>
        </onentry>
        <onexit>
            <log label="wrapper" expr="&quot;Leaving wrapper&quot;"/>
        </onexit>
        <state id="idle">
            <qt:editorinfo scenegeometry="1029.70;-957.15;969.70;-1007.15;120;100" geometry="955.89;-772.51;-60;-50;120;100"/>
            <onentry>
                <log label="wrapper.idle" expr="&quot;Inside idle&quot;"/>
                <assign location="status" expr="Idle"/>
            </onentry>
            <onexit>
                <log label="wrapper.idle" expr="&quot;Leaving idle&quot;"/>
            </onexit>
            <transition type="internal" event="TICK" target="wrapperLock">
                <qt:editorinfo endTargetFactors="49.51;1.03"/>
            </transition>
        </state>
        <state id="sendrequest">
            <qt:editorinfo scenegeometry="1178.83;1052.49;1010.36;1002.49;235.89;100" geometry="1105.02;1237.13;-168.47;-50;235.89;100"/>
            <onentry>
                <log label="wrapper.sendrequest" expr="&quot;Inside sendrequest&quot;"/>
                <script>Connector connection(client_port.getName(), &quot;/GoToComponent&quot;, &quot;tcp&quot;);
                    goTo.goTo(location);
                    QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event REQUEST_SENT submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;REQUEST_SENT&quot;);
                    });</script>
            </onentry>
            <onexit>
                <log label="wrapper.sendrequest" expr="&quot;Leaving sendrequest&quot;"/>
            </onexit>
            <transition type="internal" event="REQUEST_SENT" target="getstatus"/>
        </state>
        <state id="getstatus">
            <qt:editorinfo scenegeometry="1072.38;1315.67;889.91;1265.67;222.47;100" geometry="998.57;1500.31;-182.47;-50;222.47;100"/>
            <onentry>
                <log label="wrapper.getstatus" expr="&quot;Inside getstatus&quot;"/>
                <script>Connector connection(client_port.getName(), &quot;/GoToComponent&quot;, &quot;tcp&quot;);

                    GoToStatus ret = goTo.getStatus(location);

                    switch(ret) {
                    case RUNNING:
                        {
                            qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event STATUS_RUNNING submitted&quot;;
                            QScxmlEvent *e = new QScxmlEvent;
                            e-&gt;setName(&quot;STATUS_RUNNING&quot;);
                            e-&gt;setEventType(QScxmlEvent::InternalEvent);
                            e-&gt;setDelay(500);
                            stateMachine()-&gt;submitEvent(e);
                        }
                        break;
                    case SUCCESS:
                        {
                            QTimer::singleShot(0, stateMachine(), [&amp;](){
                                qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event STATUS_SUCCESS submitted&quot;;
                                stateMachine()-&gt;submitEvent(&quot;STATUS_SUCCESS&quot;);
                            });
                        }
                        break;
                    case ABORT:
                        {
                            QTimer::singleShot(0, stateMachine(), [&amp;](){
                                qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event STATUS_FAILED submitted&quot;;
                                stateMachine()-&gt;submitEvent(&quot;STATUS_FAILED&quot;);
                            });
                        }
                        break;
                    case NOT_STARTED:
                        {
                            QTimer::singleShot(0, stateMachine(), [&amp;](){
                                qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event STATUS_FAILED submitted&quot;;
                                stateMachine()-&gt;submitEvent(&quot;STATUS_FAILED&quot;);
                            });
                        }
                        break;
                    default:
                        qFatal(&quot;We should never be here&quot;);
                        break;
                    }</script>
            </onentry>
            <onexit>
                <log label="wrapper.getstatus" expr="&quot;Leaving getstatus&quot;"/>
            </onexit>
            <transition type="internal" event="STATUS_RUNNING" target="getstatus"/>
            <transition type="internal" event="STATUS_SUCCESS" target="success"/>
            <transition type="internal" event="STATUS_FAILED" target="failure"/>
        </state>
        <state id="success">
            <qt:editorinfo scenegeometry="-230.73;1314.65;-290.73;1264.65;120;100" geometry="-304.54;1499.29;-60;-50;120;100"/>
            <onentry>
                <log label="wrapper.success" expr="&quot;Inside success&quot;"/>
            </onentry>
            <onexit>
                <log label="wrapper.success" expr="&quot;Leaving success&quot;"/>
            </onexit>
            <transition type="internal" event="TICK" target="idle">
                <qt:editorinfo localGeometry="-29.48;-2271.80"/>
            </transition>
        </state>
        <state id="failure">
            <qt:editorinfo scenegeometry="2552.52;1278.14;2492.52;1228.14;120;100" geometry="2478.71;1462.78;-60;-50;120;100"/>
            <onentry>
                <log label="wrapper.failure" expr="&quot;Inside failure&quot;"/>
            </onentry>
            <onexit>
                <log label="wrapper.failure" expr="&quot;Leaving failure&quot;"/>
            </onexit>
            <transition type="internal" event="TICK" target="idle">
                <qt:editorinfo localGeometry="33.23;-2235.29"/>
            </transition>
        </state>
        <transition type="internal" event="HALT" target="halted"/>
        <state id="wrapperLock" initial="lockKey">
            <qt:editorinfo scenegeometry="780.42;-566.25;756.19;-777.28;1047.05;1331.26" geometry="704.33;-388.43;-24.23;-211.03;1047.05;1331.26"/>
            <state id="lockKey">
                <qt:editorinfo scenegeometry="1309.86;-577.02;1160.75;-631.07;169.11;90.05" geometry="535.38;-3.95;-149.11;-54.05;169.11;90.05"/>
                <transition type="external" event="LOCK_FALSE" target="lockKey">
                    <qt:editorinfo endTargetFactors="12.65;49.12"/>
                </transition>
                <transition type="external" event="LOCK_TRUE" target="readData">
                    <qt:editorinfo endTargetFactors="49.26;9.39"/>
                </transition>
                <onentry>
                    <script>Connector connection(client_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.lock(skillID, &quot;navigation&quot;);

                   if(ret.reqEval != VALID){ 
                        //rimani nello stato lockKey
	//gestire la differenza tra key invalida e cliente non autorizzato??
                       qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event LOCK_FALSE submitted&quot;;
                            QScxmlEvent *e = new QScxmlEvent;
                            e-&gt;setName(&quot;LOCK_FALSE&quot;);
                            e-&gt;setEventType(QScxmlEvent::InternalEvent);
                            e-&gt;setDelay(500);
                            stateMachine()-&gt;submitEvent(e);
                       }
                    else{
	//vai nello stato readData
                         QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event LOCK_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;LOCK_TRUE&quot;);
                    });
                     }</script>
                </onentry>
            </state>
            <state id="readData">
                <qt:editorinfo scenegeometry="1323.52;-256.04;1075.60;-306.04;307.92;116" geometry="546.76;310.21;-247.92;-50;307.92;116"/>
                <transition type="external" event="DATA_EQUAL_ZERO" target="unlockBusy"/>
                <transition type="external" event="DATA_GREATER_THAN_ZERO" target="writeData"/>
                <onentry>
                    <script>Connector connection(client_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataInt32 ret = blackboard.readDataInt32(skillID, &quot;navigation&quot;);

                   if(ret.reqEval ==VALID){
	     currVal = ret.dataValue;
	     if(currVal &gt;0){
	       //vai allo stato writeData
                         QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event DATA_GREATER_THAN_ZERO submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;DATA_GREATER_THAN_ZERO&quot;);
                    });
	      }
	      else{
	       //vai allo stato unlockBusy
                         QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event DATA_EQUAL_ZERO submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;DATA_EQUAL_ZERO&quot;);
                    });
	      }
                    }
                    else{
	//error??
                     }</script>
                </onentry>
            </state>
            <state id="unlockBusy">
                <qt:editorinfo scenegeometry="1728.68;-227.43;1522.84;-277.43;225.84;100" geometry="951.92;338.82;-205.84;-50;225.84;100"/>
                <transition type="external" event="UNLOCK_BUSY_TRUE" target="lockKey">
                    <qt:editorinfo localGeometry="-13.39;-343.29" endTargetFactors="92.62;51.74" movePoint="-36.86;-101.38"/>
                </transition>
                <transition type="external" event="UNLOCK_BUSY_FALSE" target="unlockBusy">
                    <qt:editorinfo endTargetFactors="23.64;51.93"/>
                </transition>
                <onentry>
                    <script>Connector connection(client_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.unlock(skillID, &quot;navigation&quot;);

                   if(ret.reqEval != VALID){ 
	//rimani nello stato unlockBusy
	//gestire la differenza tra key invalida e cliente non autorizzato??
qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event UNLOCK_BUSY_FALSE submitted&quot;;
                            QScxmlEvent *e = new QScxmlEvent;
                            e-&gt;setName(&quot;UNLOCK_BUSY_FALSE&quot;);
                            e-&gt;setEventType(QScxmlEvent::InternalEvent);
                            e-&gt;setDelay(500);
                            stateMachine()-&gt;submitEvent(e);
                    }
                    else{
	//ritorna nello stato lockKey e invia RUNNING al BT
 QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event UNLOCK_BUSY_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;UNLOCK_BUSY_TRUE&quot;);
                    });
                     }</script>
                </onentry>
            </state>
            <state id="writeData">
                <qt:editorinfo scenegeometry="1305.44;-1.83;1116.38;-51.83;249.06;100" geometry="528.68;564.42;-189.06;-50;249.06;100"/>
                <transition type="external" event="WRITE_DATA_TRUE" target="unlockKey"/>
                <onentry>
                    <script>Connector connection(client_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.writeDataInt32(skillID, &quot;navigation&quot;, currVal-1);

                   if(ret.reqEval ==VALID){
	 //vai allo stato unlockKey
 QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event WRITE_DATA_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;WRITE_DATA_TRUE&quot;);
                    });
                    }
                    else{
	//error??
                     }</script>
                </onentry>
            </state>
            <state id="unlockKey">
                <qt:editorinfo scenegeometry="1316.11;234.81;1148.61;184.81;187.50;116" geometry="539.35;801.06;-167.50;-50;187.50;116"/>
                <transition type="external" event="UNLOCK_FALSE" target="unlockKey">
                    <qt:editorinfo endTargetFactors="12.72;34.11"/>
                </transition>
                <onentry>
                    <script>Connector connection(client_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.unlock(skillID, &quot;navigation&quot;);

                   if(ret.reqEval != VALID){ 
	//rimani nello stato unlockKey
	//gestire la differenza tra key invalida e cliente non autorizzato??
qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event UNLOCK_FALSE submitted&quot;;
                            QScxmlEvent *e = new QScxmlEvent;
                            e-&gt;setName(&quot;UNLOCK_FALSE&quot;);
                            e-&gt;setEventType(QScxmlEvent::InternalEvent);
                            e-&gt;setDelay(500);
                            stateMachine()-&gt;submitEvent(e);
                    }
                    else{
	//esci dal wrapperLock e manda la request alla navigation
QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event UNLOCK_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;UNLOCK_TRUE&quot;);
                    });
                     }</script>
                </onentry>
                <transition type="external" event="UNLOCK_TRUE" target="Final_1">
                    <qt:editorinfo movePoint="-56.84;-2.27"/>
                </transition>
            </state>
            <final id="Final_1">
                <qt:editorinfo scenegeometry="1239.18;506.88;1219.18;486.88;40;40" geometry="462.42;1073.13;-20;-20;40;40"/>
            </final>
            <transition type="external" event="RESOURCE_ACQUIRED" target="sendrequest">
                <qt:editorinfo movePoint="-97.77;4.55"/>
            </transition>
            <onentry>
                <log label="wrapperLock" expr="&quot;Inside wrapperLog&quot;"/>
            </onentry>
            <onexit>
                <log expr="&quot;Leaving wrapperLog&quot;" label="wrapperLock"/>
            </onexit>
        </state>
    </state>
</scxml>
