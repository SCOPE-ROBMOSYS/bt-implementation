<scxml
    xmlns="http://www.w3.org/2005/07/scxml"
    version="1.0"
    name="GoToSkillStateMachine"
    initial="wrapper"
    datamodel="cplusplus:GoToSkillDataModel:GoToSkillDataModel.h"
>
    <state id="wrapper" initial="idle">
        <onentry>
            <log label="wrapper" expr='"Inside wrapper"'/>
        </onentry>
        <onexit>
            <log label="wrapper" expr='"Leaving wrapper"'/>
        </onexit>

        <state id="idle">
            <onentry>
                <log label="wrapper.idle" expr='"Inside idle"'/>
                <assign location="status" expr="Idle"/>
            </onentry>
            <onexit>
                <log label="wrapper.idle" expr='"Leaving idle"'/>
            </onexit>
            <transition event="TICK" target="sendrequest" />
        </state>

        <state id="sendrequest">
            <onentry>
                <log label="wrapper.sendrequest" expr='"Inside sendrequest"'/>
                <script>
                    Connector connection(client_port.getName(), "/GoToComponent", "tcp");
                    goTo.goTo(location);
                    QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; "Event REQUEST_SENT submitted";
                        stateMachine()->submitEvent("REQUEST_SENT");
                    });
                </script>
            </onentry>
            <onexit>
                <log label="wrapper.sendrequest" expr='"Leaving sendrequest"'/>
            </onexit>
            <transition event="REQUEST_SENT" target="getstatus" />
        </state>

        <state id="getstatus">
            <onentry>
                <log label="wrapper.getstatus" expr='"Inside getstatus"'/>
                <script>
                    Connector connection(client_port.getName(), "/GoToComponent", "tcp");

                    GoToStatus ret = goTo.getStatus(location);

                    switch(ret) {
                    case RUNNING:
                        {
                            qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; "Event STATUS_RUNNING submitted";
                            QScxmlEvent *e = new QScxmlEvent;
                            e->setName("STATUS_RUNNING");
                            e->setEventType(QScxmlEvent::InternalEvent);
                            e->setDelay(500);
                            stateMachine()->submitEvent(e);
                        }
                        break;
                    case SUCCESS:
                        {
                            QTimer::singleShot(0, stateMachine(), [&amp;](){
                                qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; "Event STATUS_SUCCESS submitted";
                                stateMachine()->submitEvent("STATUS_SUCCESS");
                            });
                        }
                        break;
                    case ABORT:
                        {
                            QTimer::singleShot(0, stateMachine(), [&amp;](){
                                qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; "Event STATUS_FAILED submitted";
                                stateMachine()->submitEvent("STATUS_FAILED");
                            });
                        }
                        break;
                    case NOT_STARTED:
                        {
                            QTimer::singleShot(0, stateMachine(), [&amp;](){
                                qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; "Event STATUS_FAILED submitted";
                                stateMachine()->submitEvent("STATUS_FAILED");
                            });
                        }
                        break;
                    default:
                        qFatal("We should never be here");
                        break;
                    }
                </script>
            </onentry>
            <onexit>
                <log label="wrapper.getstatus" expr='"Leaving getstatus"'/>
            </onexit>
            <transition event="STATUS_RUNNING" target="getstatus" />
            <transition event="STATUS_SUCCESS" target="success" />
            <transition event="STATUS_FAILED" target="failure" />
        </state>

        <state id="success">
            <onentry>
                <log label="wrapper.success" expr='"Inside success"'/>
            </onentry>
            <onexit>
                <log label="wrapper.success" expr='"Leaving success"'/>
            </onexit>
            <transition event="TICK" target="idle" />
        </state>

        <state id="failure">
            <onentry>
                <log label="wrapper.failure" expr='"Inside failure"'/>
            </onentry>
            <onexit>
                <log label="wrapper.failure" expr='"Leaving failure"'/>
            </onexit>
            <transition event="TICK" target="idle" />
        </state>

        <transition event="HALT" target="halted" />
    </state>

    <state id="halted">
        <onentry>
            <log label="halted" expr='"Inside halted"'/>
            <script>
                Connector connection(client_port.getName(), "/GoToComponent", "tcp");
                goTo.halt(location);
            </script>
            <send event="RESET" delay="2s"/>
        </onentry>
        <onexit>
            <log label="halted" expr='"Leaving halted"'/>
        </onexit>
       <transition event="RESET" target="wrapper" />
    </state>
</scxml>
