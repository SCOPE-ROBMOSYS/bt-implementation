<?xml version="1.0" encoding="UTF-8"?>
<scxml xmlns="http://www.w3.org/2005/07/scxml" version="1.0" binding="early" xmlns:qt="http://www.qt.io/2015/02/scxml-ext" name="GoToSkillStateMachine" datamodel="cplusplus:GoToSkillDataModel:GoToSkillDataModel.h" qt:editorversion="4.11.0" initial="wrapper">
    <qt:editorinfo initialGeometry="2467.79;-1355.11;-20;-20;40;40"/>
    <state id="halted">
        <qt:editorinfo scenegeometry="2910.17;-173.31;2850.17;-223.31;120;100" geometry="2910.17;-173.31;-60;-50;120;100"/>
        <onentry>
            <log label="halted" expr="&quot;Inside halted&quot;"/>
            <script>Connector connection(client_port.getName(), &quot;/GoToComponent&quot;, &quot;tcp&quot;);
                goTo.halt(location);</script>
            <send event="RESET" delay="2s"/>
        </onentry>
        <onexit>
            <log label="halted" expr="&quot;Leaving halted&quot;"/>
        </onexit>
        <transition type="internal" event="RESET" target="wrapperUnlock_3">
            <qt:editorinfo startTargetFactors="17.42;22.23" endTargetFactors="95.62;55.74"/>
        </transition>
    </state>
    <state id="wrapper" initial="idle">
        <qt:editorinfo scenegeometry="102.94;-202.65;-33.56;-1670.49;2129;3084.15" geometry="102.94;-202.65;-136.50;-1467.84;2129;3084.15"/>
        <onentry>
            <log label="wrapper" expr="&quot;Inside wrapper&quot;"/>
        </onentry>
        <onexit>
            <log label="wrapper" expr="&quot;Leaving wrapper&quot;"/>
        </onexit>
        <state id="idle">
            <qt:editorinfo scenegeometry="1113.82;-1395.44;1053.82;-1445.44;120;100" geometry="1010.88;-1192.79;-60;-50;120;100"/>
            <onentry>
                <log label="wrapper.idle" expr="&quot;Inside idle&quot;"/>
                <assign location="status" expr="Idle"/>
            </onentry>
            <onexit>
                <log label="wrapper.idle" expr="&quot;Leaving idle&quot;"/>
            </onexit>
            <transition type="internal" event="TICK" target="wrapperLock">
                <qt:editorinfo endTargetFactors="49.51;1.03"/>
            </transition>
        </state>
        <state id="sendrequest">
            <qt:editorinfo scenegeometry="1095.90;267.07;927.43;217.07;235.89;100" geometry="992.96;469.72;-168.47;-50;235.89;100"/>
            <onentry>
                <log label="wrapper.sendrequest" expr="&quot;Inside sendrequest&quot;"/>
                <script>Connector connection(client_port.getName(), &quot;/GoToComponent&quot;, &quot;tcp&quot;);
                    goTo.goTo(location);
                    QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event REQUEST_SENT submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;REQUEST_SENT&quot;);
                    });</script>
            </onentry>
            <onexit>
                <log label="wrapper.sendrequest" expr="&quot;Leaving sendrequest&quot;"/>
            </onexit>
            <transition type="internal" event="REQUEST_SENT" target="getstatus"/>
        </state>
        <state id="getstatus">
            <qt:editorinfo scenegeometry="1102.17;1297.66;919.70;1247.66;222.47;100" geometry="999.23;1500.31;-182.47;-50;222.47;100"/>
            <onentry>
                <log label="wrapper.getstatus" expr="&quot;Inside getstatus&quot;"/>
                <script>Connector connection(client_port.getName(), &quot;/GoToComponent&quot;, &quot;tcp&quot;);

                    GoToStatus ret = goTo.getStatus(location);

                    switch(ret) {
                    case RUNNING:
                        {
                            qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event STATUS_RUNNING submitted&quot;;
                            QScxmlEvent *e = new QScxmlEvent;
                            e-&gt;setName(&quot;STATUS_RUNNING&quot;);
                            e-&gt;setEventType(QScxmlEvent::InternalEvent);
                            e-&gt;setDelay(500);
                            stateMachine()-&gt;submitEvent(e);
                        }
                        break;
                    case SUCCESS:
                        {
                            QTimer::singleShot(0, stateMachine(), [&amp;](){
                                qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event STATUS_SUCCESS submitted&quot;;
                                stateMachine()-&gt;submitEvent(&quot;STATUS_SUCCESS&quot;);
                            });
                        }
                        break;
                    case ABORT:
                        {
                            QTimer::singleShot(0, stateMachine(), [&amp;](){
                                qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event STATUS_FAILED submitted&quot;;
                                stateMachine()-&gt;submitEvent(&quot;STATUS_FAILED&quot;);
                            });
                        }
                        break;
                    case NOT_STARTED:
                        {
                            QTimer::singleShot(0, stateMachine(), [&amp;](){
                                qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event STATUS_FAILED submitted&quot;;
                                stateMachine()-&gt;submitEvent(&quot;STATUS_FAILED&quot;);
                            });
                        }
                        break;
                    default:
                        qFatal(&quot;We should never be here&quot;);
                        break;
                    }</script>
            </onentry>
            <onexit>
                <log label="wrapper.getstatus" expr="&quot;Leaving getstatus&quot;"/>
            </onexit>
            <transition type="internal" event="STATUS_RUNNING" target="getstatus"/>
            <transition type="internal" event="STATUS_SUCCESS" target="wrapperUnlock_2">
                <qt:editorinfo endTargetFactors="88.21;88.51"/>
            </transition>
            <transition type="internal" event="STATUS_FAILED" target="wrapperUnlock_1">
                <qt:editorinfo endTargetFactors="10.29;89.37"/>
            </transition>
        </state>
        <state id="success">
            <qt:editorinfo scenegeometry="50.91;1279.42;-9.09;1229.42;120;100" geometry="-52.03;1482.07;-60;-50;120;100"/>
            <onentry>
                <log label="wrapper.success" expr="&quot;Inside success&quot;"/>
            </onentry>
            <onexit>
                <log label="wrapper.success" expr="&quot;Leaving success&quot;"/>
            </onexit>
            <transition type="internal" event="TICK" target="idle">
                <qt:editorinfo startTargetFactors="50.31;21.73" endTargetFactors="29.50;65.35" localGeometry="-15.92;-2631.24"/>
            </transition>
        </state>
        <transition type="internal" event="HALT" target="halted">
            <qt:editorinfo startTargetFactors="99.63;64.06" endTargetFactors="36.67;83.25" localGeometry="806.61;36.27"/>
        </transition>
        <state id="wrapperLock" initial="lockKey">
            <qt:editorinfo scenegeometry="460;-1049.05;731.71;-1260.08;751.11;1324.16" geometry="357.06;-846.40;271.71;-211.03;751.11;1324.16"/>
            <state id="lockKey">
                <qt:editorinfo scenegeometry="1179.49;-1056.23;1030.38;-1110.28;169.11;90.05" geometry="719.49;-7.18;-149.11;-54.05;169.11;90.05"/>
                <transition type="external" event="LOCK_FALSE" target="lockKey">
                    <qt:editorinfo endTargetFactors="12.65;49.12"/>
                </transition>
                <transition type="external" event="LOCK_TRUE" target="readData">
                    <qt:editorinfo endTargetFactors="87.40;15.11"/>
                </transition>
                <onentry>
                    <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.lock(skillID, resourceName);
	
                    switch(ret.reqEval) {
                    case VALID:
                        {
                          //vai nello stato readData
                         QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event LOCK_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;LOCK_TRUE&quot;);
                          });
                        }
                        break;
                       case INVALID_KEY:
                        {
                          //vai nello stato wrongKey e ritorna failure
                         QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event INVALID_KEY submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;INVALID_KEY&quot;);
                          });
                        }
                        break;
	default:
                         //rimani nello stato lockKey
	  //gestire la differenza tra key invalida e cliente non autorizzato??
                       qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event LOCK_FALSE submitted&quot;;
                            QScxmlEvent *e = new QScxmlEvent;
                            e-&gt;setName(&quot;LOCK_FALSE&quot;);
                            e-&gt;setEventType(QScxmlEvent::InternalEvent);
                            e-&gt;setDelay(500);
                            stateMachine()-&gt;submitEvent(e);
                        break;
                    }</script>
                    <log label="wrapperLock.lockKey" expr="&quot;Inside wrapperLock.lockKey&quot;"/>
                </onentry>
                <onexit>
                    <log label="wrapperLock.lockKey" expr="&quot;Leaving wrapperLock.lockKey&quot;"/>
                </onexit>
                <transition type="external" event="INVALID_KEY" target="wrongKey"/>
            </state>
            <state id="readData">
                <qt:editorinfo scenegeometry="1006.76;-738.84;758.84;-788.84;307.92;116" geometry="546.76;310.21;-247.92;-50;307.92;116"/>
                <transition type="external" event="DATA_EQUAL_ZERO" target="unlockBusy"/>
                <transition type="external" event="DATA_GREATER_THAN_ZERO" target="writeData"/>
                <onentry>
                    <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataInt32 ret = blackboard.readDataInt32(skillID, resourceName);

                   if(ret.reqEval ==VALID){
	     currVal = ret.dataValue;
	     if(currVal &gt;0){
	       //vai allo stato writeData
                         QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event DATA_GREATER_THAN_ZERO submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;DATA_GREATER_THAN_ZERO&quot;);
                    });
	      }
	      else{
	       //vai allo stato unlockBusy
                         QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event DATA_EQUAL_ZERO submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;DATA_EQUAL_ZERO&quot;);
                    });
	      }
                    }
                    else{
	//error??
                     }</script>
                    <log label="wrapperLock.readData" expr="&quot;Inside wrapperLock.readData&quot;"/>
                </onentry>
                <onexit>
                    <log label="wrapperLock.readData" expr="&quot;Leaving wrapperLock.readData&quot;"/>
                </onexit>
            </state>
            <state id="unlockBusy">
                <qt:editorinfo scenegeometry="1411.92;-710.23;1206.08;-760.23;225.84;100" geometry="951.92;338.82;-205.84;-50;225.84;100"/>
                <transition type="external" event="UNLOCK_BUSY_TRUE" target="lockKey">
                    <qt:editorinfo movePoint="-36.86;-101.38" endTargetFactors="92.62;51.74" localGeometry="-13.21;-353.46"/>
                </transition>
                <transition type="external" event="UNLOCK_BUSY_FALSE" target="unlockBusy">
                    <qt:editorinfo endTargetFactors="23.64;51.93"/>
                </transition>
                <onentry>
                    <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.unlock(skillID, resourceName);

                   if(ret.reqEval != VALID){ 
	//rimani nello stato unlockBusy
	//gestire la differenza tra key invalida e cliente non autorizzato??
qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event UNLOCK_BUSY_FALSE submitted&quot;;
                            QScxmlEvent *e = new QScxmlEvent;
                            e-&gt;setName(&quot;UNLOCK_BUSY_FALSE&quot;);
                            e-&gt;setEventType(QScxmlEvent::InternalEvent);
                            e-&gt;setDelay(500);
                            stateMachine()-&gt;submitEvent(e);
                    }
                    else{
	//ritorna nello stato lockKey e invia RUNNING al BT
 QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event UNLOCK_BUSY_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;UNLOCK_BUSY_TRUE&quot;);
                    });
                     }</script>
                    <log label="wrapperLock.unlockBusy" expr="&quot;Inside wrapperLock.unlockBusy&quot;"/>
                </onentry>
                <onexit>
                    <log label="wrapperLock.unlockBusy" expr="&quot;Leaving wrapperLock.unlockBusy&quot;"/>
                </onexit>
            </state>
            <state id="writeData">
                <qt:editorinfo scenegeometry="988.68;-484.63;799.62;-534.63;249.06;100" geometry="528.68;564.42;-189.06;-50;249.06;100"/>
                <transition type="external" event="WRITE_DATA_TRUE" target="unlockKey"/>
                <onentry>
                    <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);
                    
                    DataBool ret = blackboard.writeDataInt32(skillID, resourceName, currVal-1);
                   
                   if(ret.reqEval ==VALID){
	 //vai allo stato unlockKey
 QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event WRITE_DATA_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;WRITE_DATA_TRUE&quot;);
                    });
	resourceCount +=1;
                    }
                    else{
	//error??
                     }</script>
                    <log label="wrapperLock.writeData" expr="&quot;Inside wrapperLock.writeData&quot;"/>
                </onentry>
                <onexit>
                    <log label="wrapperLock.writeData" expr="&quot;Leaving wrapperLock.writeData&quot;"/>
                </onexit>
            </state>
            <state id="unlockKey">
                <qt:editorinfo scenegeometry="999.35;-247.99;831.85;-297.99;187.50;116" geometry="539.35;801.06;-167.50;-50;187.50;116"/>
                <transition type="external" event="UNLOCK_FALSE" target="unlockKey">
                    <qt:editorinfo endTargetFactors="12.72;34.11"/>
                </transition>
                <onentry>
                    <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.unlock(skillID, resourceName);

                   if(ret.reqEval != VALID){ 
	//rimani nello stato unlockKey
	//gestire la differenza tra key invalida e cliente non autorizzato??
qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event UNLOCK_FALSE submitted&quot;;
                            QScxmlEvent *e = new QScxmlEvent;
                            e-&gt;setName(&quot;UNLOCK_FALSE&quot;);
                            e-&gt;setEventType(QScxmlEvent::InternalEvent);
                            e-&gt;setDelay(500);
                            stateMachine()-&gt;submitEvent(e);
                    }
                    else{
	//esci dal wrapperLock e manda la request alla navigation
QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event UNLOCK_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;UNLOCK_TRUE&quot;);
                    });
                     }</script>
                    <log label="wrapperLock.unlockKey" expr="&quot;Inside wrapperLock.unlockKey&quot;"/>
                </onentry>
                <transition type="external" event="UNLOCK_TRUE" target="sendrequest">
                    <qt:editorinfo movePoint="-56.84;-2.27" endTargetFactors="45.24;12.10"/>
                </transition>
                <onexit>
                    <log label="wrapperLock.unlockKey" expr="&quot;Leaving wrapperLock.unlockKey&quot;"/>
                </onexit>
            </state>
            <onentry>
                <log label="wrapperLock" expr="&quot;Inside wrapperLock&quot;"/>
            </onentry>
            <onexit>
                <log expr="&quot;Leaving wrapperLock&quot;" label="wrapperLock"/>
            </onexit>
            <state id="wrongKey">
                <qt:editorinfo scenegeometry="844.61;-1050.55;784.61;-1100.55;120;100" geometry="384.61;-1.50;-60;-50;120;100"/>
                <transition type="external" event="TICK" target="idle">
                    <qt:editorinfo endTargetFactors="21.57;82.47" localGeometry="1.21;-312.42"/>
                </transition>
                <onentry>
                    <log label="wrapperLock.wrongKey" expr="&quot;Inside wrapperLock.wrongKey&quot;"/>
                </onentry>
                <onexit>
                    <log label="wrapperLock.wrongKey" expr="&quot;Leaving wrapperLock.wrongKey&quot;"/>
                </onexit>
            </state>
        </state>
        <state id="wrapperUnlock_2" initial="lockKey_2">
            <qt:editorinfo scenegeometry="-69.07;983.09;202.64;744.85;406.80;622.21" geometry="-172.01;1185.74;271.71;-238.24;406.80;622.21"/>
            <state id="lockKey_2">
                <qt:editorinfo scenegeometry="451.43;876.23;302.32;822.18;169.11;120.05" geometry="520.50;-106.86;-149.11;-54.05;169.11;120.05"/>
                <transition type="external" event="LOCK_FALSE" target="lockKey_2">
                    <qt:editorinfo endTargetFactors="12.65;49.12"/>
                </transition>
                <transition type="external" event="LOCK_TRUE" target="readData_2">
                    <qt:editorinfo endTargetFactors="49.26;9.39"/>
                </transition>
                <onentry>
                    <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.lock(skillID, resourceName);

                   if(ret.reqEval != VALID){ 
                        //rimani nello stato lockKey
	//gestire la differenza tra key invalida e cliente non autorizzato??
                       qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event LOCK_FALSE submitted&quot;;
                            QScxmlEvent *e = new QScxmlEvent;
                            e-&gt;setName(&quot;LOCK_FALSE&quot;);
                            e-&gt;setEventType(QScxmlEvent::InternalEvent);
                            e-&gt;setDelay(500);
                            stateMachine()-&gt;submitEvent(e);
                       }
                    else{
	//vai nello stato readData
                         QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event LOCK_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;LOCK_TRUE&quot;);
                    });
                     }</script>
                    <log label="wrapperUnlock_2.lockKey_2" expr="&quot;Inside wrapperUnlock_2.lockKey_2&quot;"/>
                </onentry>
                <onexit>
                    <log label="wrapperUnlock_2.lockKey_2" expr="&quot;Leaving wrapperUnlock_2.lockKey_2&quot;"/>
                </onexit>
            </state>
            <state id="readData_2">
                <qt:editorinfo scenegeometry="506.21;1004.43;258.29;954.43;267.92;100" geometry="575.28;21.34;-247.92;-50;267.92;100"/>
                <transition type="external" event="DATA_READ" target="writeData_2"/>
                <onentry>
                    <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataInt32 ret = blackboard.readDataInt32(skillID, resourceName);

                   if(ret.reqEval ==VALID){
	     currVal = ret.dataValue;
	       //vai allo stato writeData
                         QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event DATA_READ submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;DATA_READ&quot;);
                    });

                    }
                    else{
	//error??
                     }</script>
                    <log label="wrapperUnlock_2.readData_2" expr="&quot;Inside wrapperUnlock_2.readData_2&quot;"/>
                </onentry>
                <onexit>
                    <log label="wrapperUnlock_2.readData_2" expr="&quot;Leaving wrapperUnlock_2.readData_2&quot;"/>
                </onexit>
            </state>
            <state id="writeData_2">
                <qt:editorinfo scenegeometry="489.36;1139.62;300.30;1089.62;209.06;100" geometry="558.43;156.53;-189.06;-50;209.06;100"/>
                <transition type="external" event="WRITE_DATA_TRUE" target="unlockKey_2"/>
                <onentry>
                    <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.writeDataInt32(skillID, resourceName, currVal+1);

                   if(ret.reqEval ==VALID){
	 //vai allo stato unlockKey
 QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event WRITE_DATA_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;WRITE_DATA_TRUE&quot;);
                    });
	resourceCount -=1;
                    }
                    else{
	//error??
                     }</script>
                    <log label="wrapperUnlock_2.writeData_2" expr="&quot;Inside wrapperUnlock_2.writeData_2&quot;"/>
                </onentry>
                <onexit>
                    <log label="wrapperUnlock_2.writeData_2" expr="&quot;Leaving wrapperUnlock_2.writeData_2&quot;"/>
                </onexit>
            </state>
            <state id="unlockKey_2">
                <qt:editorinfo scenegeometry="461.60;1279.55;294.10;1229.55;187.50;116" geometry="530.67;296.46;-167.50;-50;187.50;116"/>
                <transition type="external" event="UNLOCK_FALSE" target="unlockKey_2">
                    <qt:editorinfo endTargetFactors="12.72;34.11"/>
                </transition>
                <onentry>
                    <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.unlock(skillID, resourceName);

                   if(ret.reqEval != VALID){ 
	//rimani nello stato unlockKey
	//gestire la differenza tra key invalida e cliente non autorizzato??
qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event UNLOCK_FALSE submitted&quot;;
                            QScxmlEvent *e = new QScxmlEvent;
                            e-&gt;setName(&quot;UNLOCK_FALSE&quot;);
                            e-&gt;setEventType(QScxmlEvent::InternalEvent);
                            e-&gt;setDelay(500);
                            stateMachine()-&gt;submitEvent(e);
                    }
                    else{
	//esci dal wrapperUnlock e vai nello stato success
QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event UNLOCK_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;UNLOCK_TRUE&quot;);
                    });
                     }</script>
                    <log label="wrapperUnlock_2.unlockKey_2" expr="&quot;Inside wrapperUnlock_2.unlockKey_2&quot;"/>
                </onentry>
                <transition type="external" event="UNLOCK_TRUE" target="success">
                    <qt:editorinfo endTargetFactors="73.60;67.94"/>
                </transition>
                <onexit>
                    <log label="wrapperUnlock_2.unlockKey_2" expr="&quot;Leaving wrapperUnlock_2.unlockKey_2&quot;"/>
                </onexit>
            </state>
            <onentry>
                <log label="wrapperUnlock_2" expr="&quot;Inside wrapperUnlock_2&quot;"/>
            </onentry>
            <onexit>
                <log expr="&quot;Leaving wrapperUnlock_2&quot;" label="wrapperUnlock_2"/>
            </onexit>
        </state>
        <state id="failure">
            <qt:editorinfo scenegeometry="2015.44;1276.01;1955.44;1226.01;120;100" geometry="1912.50;1478.66;-60;-50;120;100"/>
            <onentry>
                <log label="wrapper.failure" expr="&quot;Inside failure&quot;"/>
            </onentry>
            <onexit>
                <log label="wrapper.failure" expr="&quot;Leaving failure&quot;"/>
            </onexit>
            <transition type="internal" event="TICK" target="idle">
                <qt:editorinfo localGeometry="0;-2690.83"/>
            </transition>
        </state>
        <state id="wrapperUnlock_1" initial="lockKey_1">
            <qt:editorinfo scenegeometry="1168.42;975.22;1440.13;721.43;406.80;637.76" geometry="1065.48;1177.87;271.71;-253.79;406.80;637.76"/>
            <state id="lockKey_1">
                <qt:editorinfo scenegeometry="1686.72;853.75;1537.61;799.70;169.11;120.05" geometry="518.30;-121.47;-149.11;-54.05;169.11;120.05"/>
                <transition type="external" event="LOCK_FALSE" target="lockKey_1">
                    <qt:editorinfo endTargetFactors="12.65;49.12"/>
                </transition>
                <transition type="external" event="LOCK_TRUE" target="readData_1">
                    <qt:editorinfo endTargetFactors="49.26;9.39"/>
                </transition>
                <onentry>
                    <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.lock(skillID, resourceName);

                   if(ret.reqEval != VALID){ 
                        //rimani nello stato lockKey
	//gestire la differenza tra key invalida e cliente non autorizzato??
                       qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event LOCK_FALSE submitted&quot;;
                            QScxmlEvent *e = new QScxmlEvent;
                            e-&gt;setName(&quot;LOCK_FALSE&quot;);
                            e-&gt;setEventType(QScxmlEvent::InternalEvent);
                            e-&gt;setDelay(500);
                            stateMachine()-&gt;submitEvent(e);
                       }
                    else{
	//vai nello stato readData
                         QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event LOCK_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;LOCK_TRUE&quot;);
                    });
                     }</script>
                    <log label="wrapperUnlock_1.lockKey_1" expr="&quot;Inside wrapperUnlock_1.lockKey_1&quot;"/>
                </onentry>
                <onexit>
                    <log label="wrapperUnlock_1.lockKey_1" expr="&quot;Leaving wrapperUnlock_1.lockKey_1&quot;"/>
                </onexit>
            </state>
            <state id="readData_1">
                <qt:editorinfo scenegeometry="1743.70;996.56;1495.78;946.56;267.92;100" geometry="575.28;21.34;-247.92;-50;267.92;100"/>
                <transition type="external" event="DATA_READ" target="writeData_1"/>
                <onentry>
                    <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataInt32 ret = blackboard.readDataInt32(skillID, resourceName);

                   if(ret.reqEval ==VALID){
	     currVal = ret.dataValue;
	       //vai allo stato writeData
                         QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event DATA_READ submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;DATA_READ&quot;);
                    });

                    }
                    else{
	//error??
                     }</script>
                    <log label="wrapperUnlock_1.readData_1" expr="&quot;Inside wrapperUnlock_1.readData_1&quot;"/>
                </onentry>
                <onexit>
                    <log label="wrapperUnlock_1.readData_1" expr="&quot;Leaving wrapperUnlock_1.readData_1&quot;"/>
                </onexit>
            </state>
            <state id="writeData_1">
                <qt:editorinfo scenegeometry="1726.85;1131.75;1537.79;1081.75;209.06;100" geometry="558.43;156.53;-189.06;-50;209.06;100"/>
                <transition type="external" event="WRITE_DATA_TRUE" target="unlockKey_1"/>
                <onentry>
                    <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.writeDataInt32(skillID, resourceName, currVal+1);

                   if(ret.reqEval ==VALID){
	 //vai allo stato unlockKey
 QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event WRITE_DATA_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;WRITE_DATA_TRUE&quot;);
                    });
	resourceCount -=1;
                    }
                    else{
	//error??
                     }</script>
                    <log label="wrapperUnlock_1.writeData_1" expr="&quot;Inside wrapperUnlock_1.writeData_1&quot;"/>
                </onentry>
                <onexit>
                    <log label="wrapperUnlock_1.writeData_1" expr="&quot;Leaving wrapperUnlock_1.writeData_1&quot;"/>
                </onexit>
            </state>
            <state id="unlockKey_1">
                <qt:editorinfo scenegeometry="1699.09;1271.68;1531.59;1221.68;187.50;116" geometry="530.67;296.46;-167.50;-50;187.50;116"/>
                <transition type="external" event="UNLOCK_FALSE" target="unlockKey_1">
                    <qt:editorinfo endTargetFactors="12.72;34.11"/>
                </transition>
                <onentry>
                    <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.unlock(skillID, resourceName);

                   if(ret.reqEval != VALID){ 
	//rimani nello stato unlockKey
	//gestire la differenza tra key invalida e cliente non autorizzato??
qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event UNLOCK_FALSE submitted&quot;;
                            QScxmlEvent *e = new QScxmlEvent;
                            e-&gt;setName(&quot;UNLOCK_FALSE&quot;);
                            e-&gt;setEventType(QScxmlEvent::InternalEvent);
                            e-&gt;setDelay(500);
                            stateMachine()-&gt;submitEvent(e);
                    }
                    else{
	//esci dal wrapperUnlock e vai nello stato failure
QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event UNLOCK_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;UNLOCK_TRUE&quot;);
                    });
                     }</script>
                    <log label="wrapperUnlock_1.unlockKey_1" expr="&quot;Inside wrapperUnlock_1.unlockKey_1&quot;"/>
                </onentry>
                <transition type="external" event="UNLOCK_TRUE" target="failure"/>
                <onexit>
                    <log label="wrapperUnlock_1.unlockKey_1" expr="&quot;Leaving wrapperUnlock_1.unlockKey_1&quot;"/>
                </onexit>
            </state>
            <onentry>
                <log label="wrapperUnlock_1" expr="&quot;Inside wrapperUnlock_1&quot;"/>
            </onentry>
            <onexit>
                <log expr="&quot;Leaving wrapperUnlock_1&quot;" label="wrapperUnlock_1"/>
            </onexit>
        </state>
    </state>
    <state id="wrapperUnlock_3" initial="checkResource">
        <qt:editorinfo scenegeometry="2059.77;-205.34;2158.19;-776.95;619.20;955.89" geometry="2059.77;-205.34;98.42;-571.61;619.20;955.89"/>
        <state id="lockKey_3">
            <qt:editorinfo scenegeometry="2581.38;-359.76;2432.27;-413.81;169.11;120.05" geometry="521.61;-154.42;-149.11;-54.05;169.11;120.05"/>
            <transition type="external" event="LOCK_FALSE" target="lockKey_3">
                <qt:editorinfo endTargetFactors="12.65;49.12"/>
            </transition>
            <transition type="external" event="LOCK_TRUE" target="readData_3">
                <qt:editorinfo endTargetFactors="49.26;9.39"/>
            </transition>
            <onentry>
                <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.lock(skillID, resourceName);

                   if(ret.reqEval != VALID){ 
                        //rimani nello stato lockKey
	//gestire la differenza tra key invalida e cliente non autorizzato??
                       qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event LOCK_FALSE submitted&quot;;
                            QScxmlEvent *e = new QScxmlEvent;
                            e-&gt;setName(&quot;LOCK_FALSE&quot;);
                            e-&gt;setEventType(QScxmlEvent::InternalEvent);
                            e-&gt;setDelay(500);
                            stateMachine()-&gt;submitEvent(e);
                       }
                    else{
	//vai nello stato readData
                         QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event LOCK_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;LOCK_TRUE&quot;);
                    });
                     }</script>
                <log label="wrapperUnlock_3.lockKey_3" expr="&quot;Inside wrapperUnlock_3.lockKey_3&quot;"/>
            </onentry>
            <onexit>
                <log label="wrapperUnlock_3.lockKey_3" expr="&quot;Leaving wrapperUnlock_3.lockKey_3&quot;"/>
            </onexit>
        </state>
        <state id="readData_3">
            <qt:editorinfo scenegeometry="2635.05;-184;2387.13;-234;267.92;100" geometry="575.28;21.34;-247.92;-50;267.92;100"/>
            <transition type="external" event="DATA_READ" target="writeData_3"/>
            <onentry>
                <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataInt32 ret = blackboard.readDataInt32(skillID, resourceName);

                   if(ret.reqEval ==VALID){
	     currVal = ret.dataValue;
	       //vai allo stato writeData
                         QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event DATA_READ submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;DATA_READ&quot;);
                    });

                    }
                    else{
	//error??
                     }</script>
                <log label="wrapperUnlock_3.readData_3" expr="&quot;Inside wrapperUnlock_3.readData_3&quot;"/>
            </onentry>
            <onexit>
                <log label="wrapperUnlock_3.readData_3" expr="&quot;Leaving wrapperUnlock_3.readData_3&quot;"/>
            </onexit>
        </state>
        <state id="writeData_3">
            <qt:editorinfo scenegeometry="2619.41;-48.81;2430.35;-98.81;209.06;100" geometry="559.64;156.53;-189.06;-50;209.06;100"/>
            <transition type="external" event="WRITE_DATA_TRUE" target="unlockKey_3"/>
            <onentry>
                <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.writeDataInt32(skillID, resourceName, currVal+1);

                   if(ret.reqEval ==VALID){
	 //vai allo stato unlockKey
 QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event WRITE_DATA_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;WRITE_DATA_TRUE&quot;);
                    });
	resourceCount -=1;
                    }
                    else{
	//error??
                     }</script>
                <log label="wrapperUnlock_3.writeData_3" expr="&quot;Inside wrapperUnlock_3.writeData_3&quot;"/>
            </onentry>
            <onexit>
                <log label="wrapperUnlock_3.writeData_3" expr="&quot;Leaving wrapperUnlock_3.writeData_3&quot;"/>
            </onexit>
        </state>
        <state id="unlockKey_3">
            <qt:editorinfo scenegeometry="2592.26;92.94;2424.76;42.94;187.50;116" geometry="532.49;298.28;-167.50;-50;187.50;116"/>
            <transition type="external" event="UNLOCK_FALSE" target="unlockKey_3">
                <qt:editorinfo endTargetFactors="12.72;34.11"/>
            </transition>
            <onentry>
                <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.unlock(skillID, resourceName);

                   if(ret.reqEval != VALID){ 
	//rimani nello stato unlockKey
	//gestire la differenza tra key invalida e cliente non autorizzato??
qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event UNLOCK_FALSE submitted&quot;;
                            QScxmlEvent *e = new QScxmlEvent;
                            e-&gt;setName(&quot;UNLOCK_FALSE&quot;);
                            e-&gt;setEventType(QScxmlEvent::InternalEvent);
                            e-&gt;setDelay(500);
                            stateMachine()-&gt;submitEvent(e);
                    }
                    else{
	          if(resourceCount==0){
		//esci dal wrapperUnlock e vai nello stato idle
		QTimer::singleShot(0, stateMachine(), [&amp;](){
                       	 qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event UNLOCK_TRUE submitted&quot;;
                       	 stateMachine()-&gt;submitEvent(&quot;UNLOCK_TRUE&quot;);
                  		  });
	            }
	            else{
		//ritorna nello stato checkResourse
		QTimer::singleShot(0, stateMachine(), [&amp;](){
                       	 qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event TO_CHECK_RESOURCE submitted&quot;;
                       	 stateMachine()-&gt;submitEvent(&quot;TO_CHECK_RESOURCE&quot;);
                  		  });
	           }
                     }</script>
                <log label="wrapperUnlock_3.unlockKey_3" expr="&quot;Inside wrapperUnlock_3.unlockKey_3&quot;"/>
            </onentry>
            <transition type="external" event="UNLOCK_TRUE" target="wrapper">
                <qt:editorinfo endTargetFactors="98.72;57.74"/>
            </transition>
            <onexit>
                <log label="wrapperUnlock_3.unlockKey_3" expr="&quot;Leaving wrapperUnlock_3.unlockKey_3&quot;"/>
            </onexit>
            <transition type="external" event="TO_CHECK_RESOURCE" target="checkResource">
                <qt:editorinfo movePoint="-11.06;290.88" endTargetFactors="84.68;53.75" localGeometry="173.84;-0.45;173.84;-610.25"/>
            </transition>
        </state>
        <onentry>
            <log label="wrapperUnlock_3" expr="&quot;Inside wrapperUnlock_3&quot;"/>
        </onentry>
        <onexit>
            <log expr="&quot;Leaving wrapperUnlock_3&quot;" label="wrapperUnlock_3"/>
        </onexit>
        <state id="checkResource">
            <qt:editorinfo scenegeometry="2572.61;-513.45;2426.13;-563.45;177.22;100" geometry="512.84;-308.11;-146.48;-50;177.22;100"/>
            <transition type="external" event="FREE_UP" target="lockKey_3"/>
            <transition type="external" event="TO_IDLE" target="wrapper">
                <qt:editorinfo movePoint="-4.64;-28.43" endTargetFactors="99.30;33.82"/>
            </transition>
            <onentry>
       <!--         <script>if(resourceCount==0){
                        //vai nello stato idle
                         QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event TO_IDLE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;TO_IDLE&quot;);
                    });
}
else{
	//vai nello stato lockKey_3
                         QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event FREE_UP submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;FREE_UP&quot;);
                    });
}</script> -->
                <log label="wrapperUnlock_3.checkResource" expr="&quot;Inside wrapperUnlock_3.checkResource&quot;"/>
                <if cond="resourceCount==0">
                    <send event="TO_IDLE"/>
                    <else/>
                    <send event="FREE_UP"/>
                </if>
            </onentry>
            <onexit>
                <log label="wrapperUnlock_3.checkResource" expr="&quot;Leaving wrapperUnlock_3.checkResource&quot;"/>
            </onexit>
        </state>
    </state>
</scxml>
