<?xml version="1.0" encoding="UTF-8"?>
<scxml xmlns="http://www.w3.org/2005/07/scxml" version="1.0" binding="early" xmlns:qt="http://www.qt.io/2015/02/scxml-ext" name="GoToSkillStateMachine" datamodel="cplusplus:GoToSkillDataModel:GoToSkillDataModel.h" qt:editorversion="4.11.0" initial="wrapper">
    <qt:editorinfo initialGeometry="2498.21;-957.28;-20;-20;40;40"/>
    <state id="halted">
        <qt:editorinfo geometry="2910.17;-181.05;-60;-50;120;100" scenegeometry="2910.17;-181.05;2850.17;-231.05;120;100"/>
        <onentry>
            <log label="halted" expr="&quot;Inside halted&quot;"/>
            <script>Connector connection(client_port.getName(), &quot;/GoToComponent&quot;, &quot;tcp&quot;);
                goTo.halt(location);</script>
            <send event="RESET" delay="2s"/>
        </onentry>
        <onexit>
            <log label="halted" expr="&quot;Leaving halted&quot;"/>
        </onexit>
        <transition type="internal" event="RESET" target="wrapperUnlock_3">
            <qt:editorinfo endTargetFactors="95.66;38.79" startTargetFactors="17.42;22.23"/>
        </transition>
    </state>
    <state id="wrapper" initial="idle">
        <qt:editorinfo geometry="101.72;-201.43;-136.50;-1467.84;2129;3084.15" scenegeometry="101.72;-201.43;-34.78;-1669.27;2129;3084.15"/>
        <onentry>
            <log label="wrapper" expr="&quot;Inside wrapper&quot;"/>
        </onentry>
        <onexit>
            <log label="wrapper" expr="&quot;Leaving wrapper&quot;"/>
        </onexit>
        <state id="idle">
            <qt:editorinfo geometry="1010.88;-1192.79;-60;-50;120;100" scenegeometry="1120.68;-1394.22;1060.68;-1444.22;120;100"/>
            <onentry>
                <log label="wrapper.idle" expr="&quot;Inside idle&quot;"/>
                <assign location="status" expr="Idle"/>
            </onentry>
            <onexit>
                <log label="wrapper.idle" expr="&quot;Leaving idle&quot;"/>
            </onexit>
            <transition type="internal" event="TICK" target="wrapperLock">
                <qt:editorinfo endTargetFactors="49.51;1.03"/>
            </transition>
        </state>
        <state id="sendrequest">
            <qt:editorinfo geometry="992.96;469.72;-168.47;-50;235.89;100" scenegeometry="1102.76;268.29;934.29;218.29;235.89;100"/>
            <onentry>
                <log label="wrapper.sendrequest" expr="&quot;Inside sendrequest&quot;"/>
                <script>Connector connection(client_port.getName(), &quot;/GoToComponent&quot;, &quot;tcp&quot;);
                    goTo.goTo(location);
                    QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event REQUEST_SENT submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;REQUEST_SENT&quot;);
                    });</script>
            </onentry>
            <onexit>
                <log label="wrapper.sendrequest" expr="&quot;Leaving sendrequest&quot;"/>
            </onexit>
            <transition type="internal" event="REQUEST_SENT" target="getstatus"/>
        </state>
        <state id="getstatus">
            <qt:editorinfo geometry="999.23;1500.31;-182.47;-50;222.47;100" scenegeometry="1109.03;1298.88;926.56;1248.88;222.47;100"/>
            <onentry>
                <log label="wrapper.getstatus" expr="&quot;Inside getstatus&quot;"/>
                <script>Connector connection(client_port.getName(), &quot;/GoToComponent&quot;, &quot;tcp&quot;);

                    GoToStatus ret = goTo.getStatus(location);

                    switch(ret) {
                    case RUNNING:
                        {
                            qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event STATUS_RUNNING submitted&quot;;
                            QScxmlEvent *e = new QScxmlEvent;
                            e-&gt;setName(&quot;STATUS_RUNNING&quot;);
                            e-&gt;setEventType(QScxmlEvent::InternalEvent);
                            e-&gt;setDelay(500);
                            stateMachine()-&gt;submitEvent(e);
                        }
                        break;
                    case SUCCESS:
                        {
                            QTimer::singleShot(0, stateMachine(), [&amp;](){
                                qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event STATUS_SUCCESS submitted&quot;;
                                stateMachine()-&gt;submitEvent(&quot;STATUS_SUCCESS&quot;);
                            });
                        }
                        break;
                    case ABORT:
                        {
                            QTimer::singleShot(0, stateMachine(), [&amp;](){
                                qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event STATUS_FAILED submitted&quot;;
                                stateMachine()-&gt;submitEvent(&quot;STATUS_FAILED&quot;);
                            });
                        }
                        break;
                    case NOT_STARTED:
                        {
                            QTimer::singleShot(0, stateMachine(), [&amp;](){
                                qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event STATUS_FAILED submitted&quot;;
                                stateMachine()-&gt;submitEvent(&quot;STATUS_FAILED&quot;);
                            });
                        }
                        break;
                    default:
                        qFatal(&quot;We should never be here&quot;);
                        break;
                    }</script>
            </onentry>
            <onexit>
                <log label="wrapper.getstatus" expr="&quot;Leaving getstatus&quot;"/>
            </onexit>
            <transition type="internal" event="STATUS_RUNNING" target="getstatus"/>
            <transition type="internal" event="STATUS_SUCCESS" target="wrapperUnlock_2">
                <qt:editorinfo endTargetFactors="88.21;88.51"/>
            </transition>
            <transition type="internal" event="STATUS_FAILED" target="wrapperUnlock_1">
                <qt:editorinfo endTargetFactors="10.29;89.37"/>
            </transition>
        </state>
        <state id="success">
            <qt:editorinfo geometry="-50.42;1482.07;-60;-50;120;100" scenegeometry="59.38;1280.64;-0.62;1230.64;120;100"/>
            <onentry>
                <log label="wrapper.success" expr="&quot;Inside success&quot;"/>
            </onentry>
            <onexit>
                <log label="wrapper.success" expr="&quot;Leaving success&quot;"/>
            </onexit>
            <transition type="internal" event="TICK" target="idle">
                <qt:editorinfo endTargetFactors="29.50;65.35" localGeometry="-17.53;-2631.25" startTargetFactors="50.31;21.73"/>
            </transition>
        </state>
        <transition type="internal" event="HALT" target="halted">
            <qt:editorinfo endTargetFactors="36.67;83.25" localGeometry="807.50;35.05" startTargetFactors="99.63;64.06"/>
        </transition>
        <state id="wrapperLock" initial="lockKey">
            <qt:editorinfo geometry="357.06;-846.40;271.71;-211.03;751.11;1324.16" scenegeometry="466.86;-1047.83;738.57;-1258.86;751.11;1324.16"/>
            <state id="lockKey">
                <qt:editorinfo geometry="719.49;-7.18;-149.11;-54.05;169.11;90.05" scenegeometry="1186.35;-1055.01;1037.24;-1109.06;169.11;90.05"/>
                <transition type="external" event="LOCK_FALSE" target="lockKey">
                    <qt:editorinfo endTargetFactors="12.65;49.12" movePoint="19.38;-4.84"/>
                </transition>
                <transition type="external" event="LOCK_TRUE" target="readData">
                    <qt:editorinfo endTargetFactors="87.40;15.11"/>
                </transition>
                <onentry>
                    <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.lock(skillID, &quot;navigation&quot;);
	
                    switch(ret.reqEval) {
                    case VALID:
                        {
                          //vai nello stato readData
                         QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event LOCK_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;LOCK_TRUE&quot;);
                          });
                        }
                        break;
                       case INVALID_KEY:
                        {
                          //vai nello stato wrongKey e ritorna failure
                         QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event INVALID_KEY submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;INVALID_KEY&quot;);
                          });
                        }
                        break;
	default:
                         //rimani nello stato lockKey
	  //gestire la differenza tra key invalida e cliente non autorizzato??
                       qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event LOCK_FALSE submitted&quot;;
                            QScxmlEvent *e = new QScxmlEvent;
                            e-&gt;setName(&quot;LOCK_FALSE&quot;);
                            e-&gt;setEventType(QScxmlEvent::InternalEvent);
                            e-&gt;setDelay(500);
                            stateMachine()-&gt;submitEvent(e);
                        break;
                    }</script>
                    <log label="wrapperLock.lockKey" expr="&quot;Inside wrapperLock.lockKey&quot;"/>
                </onentry>
                <onexit>
                    <log label="wrapperLock.lockKey" expr="&quot;Leaving wrapperLock.lockKey&quot;"/>
                </onexit>
                <transition type="external" event="INVALID_KEY" target="wrongKey"/>
            </state>
            <state id="readData">
                <qt:editorinfo geometry="546.76;310.21;-247.92;-50;307.92;116" scenegeometry="1013.62;-737.62;765.70;-787.62;307.92;116"/>
                <transition type="external" event="DATA_EQUAL_ZERO" target="unlockBusy"/>
                <transition type="external" event="DATA_GREATER_THAN_ZERO" target="writeData"/>
                <onentry>
                    <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataInt32 ret = blackboard.readDataInt32(skillID, &quot;navigation&quot;);

                   if(ret.reqEval ==VALID){
	     currVal = ret.dataValue;
	     if(currVal &gt;0){
	       //vai allo stato writeData
                         QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event DATA_GREATER_THAN_ZERO submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;DATA_GREATER_THAN_ZERO&quot;);
                    });
	      }
	      else{
	       //vai allo stato unlockBusy
                         QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event DATA_EQUAL_ZERO submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;DATA_EQUAL_ZERO&quot;);
                    });
	      }
                    }
                    else{
	//error??
                     }</script>
                    <log label="wrapperLock.readData" expr="&quot;Inside wrapperLock.readData&quot;"/>
                </onentry>
                <onexit>
                    <log label="wrapperLock.readData" expr="&quot;Leaving wrapperLock.readData&quot;"/>
                </onexit>
            </state>
            <state id="unlockBusy">
                <qt:editorinfo geometry="951.92;338.82;-205.84;-50;225.84;100" scenegeometry="1418.78;-709.01;1212.94;-759.01;225.84;100"/>
                <transition type="external" event="UNLOCK_BUSY_TRUE" target="lockKey">
                    <qt:editorinfo endTargetFactors="92.62;51.74" localGeometry="-13.21;-350.23" movePoint="-36.86;-101.38"/>
                </transition>
                <transition type="external" event="UNLOCK_BUSY_FALSE" target="unlockBusy">
                    <qt:editorinfo endTargetFactors="23.64;51.93"/>
                </transition>
                <onentry>
                    <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.unlock(skillID, &quot;navigation&quot;);

                   if(ret.reqEval != VALID){ 
	//rimani nello stato unlockBusy
	//gestire la differenza tra key invalida e cliente non autorizzato??
qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event UNLOCK_BUSY_FALSE submitted&quot;;
                            QScxmlEvent *e = new QScxmlEvent;
                            e-&gt;setName(&quot;UNLOCK_BUSY_FALSE&quot;);
                            e-&gt;setEventType(QScxmlEvent::InternalEvent);
                            e-&gt;setDelay(500);
                            stateMachine()-&gt;submitEvent(e);
                    }
                    else{
	//ritorna nello stato lockKey e invia RUNNING al BT
 QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event UNLOCK_BUSY_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;UNLOCK_BUSY_TRUE&quot;);
                    });
                     }</script>
                    <log label="wrapperLock.unlockBusy" expr="&quot;Inside wrapperLock.unlockBusy&quot;"/>
                </onentry>
                <onexit>
                    <log label="wrapperLock.unlockBusy" expr="&quot;Leaving wrapperLock.unlockBusy&quot;"/>
                </onexit>
            </state>
            <state id="writeData">
                <qt:editorinfo geometry="528.68;564.42;-189.06;-50;249.06;100" scenegeometry="995.54;-483.41;806.48;-533.41;249.06;100"/>
                <transition type="external" event="WRITE_DATA_TRUE" target="unlockKey"/>
                <onentry>
                    <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);
                    
                    DataBool ret = blackboard.writeDataInt32(skillID, &quot;navigation&quot;, currVal-1);
                   
                   if(ret.reqEval ==VALID){
	 //vai allo stato unlockKey
 QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event WRITE_DATA_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;WRITE_DATA_TRUE&quot;);
                    });
                    }
                    else{
	//error??
                     }</script>
                    <log label="wrapperLock.writeData" expr="&quot;Inside wrapperLock.writeData&quot;"/>
                </onentry>
                <onexit>
                    <log label="wrapperLock.writeData" expr="&quot;Leaving wrapperLock.writeData&quot;"/>
                </onexit>
            </state>
            <state id="unlockKey">
                <qt:editorinfo geometry="539.35;801.06;-167.50;-50;187.50;116" scenegeometry="1006.21;-246.77;838.71;-296.77;187.50;116"/>
                <transition type="external" event="UNLOCK_FALSE" target="unlockKey">
                    <qt:editorinfo endTargetFactors="12.72;34.11"/>
                </transition>
                <onentry>
                    <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.unlock(skillID, &quot;navigation&quot;);

                   if(ret.reqEval != VALID){ 
	//rimani nello stato unlockKey
	//gestire la differenza tra key invalida e cliente non autorizzato??
qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event UNLOCK_FALSE submitted&quot;;
                            QScxmlEvent *e = new QScxmlEvent;
                            e-&gt;setName(&quot;UNLOCK_FALSE&quot;);
                            e-&gt;setEventType(QScxmlEvent::InternalEvent);
                            e-&gt;setDelay(500);
                            stateMachine()-&gt;submitEvent(e);
                    }
                    else{
	//esci dal wrapperLock e manda la request alla navigation
QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event UNLOCK_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;UNLOCK_TRUE&quot;);
                    });
                     }</script>
                    <log label="wrapperLock.unlockKey" expr="&quot;Inside wrapperLock.unlockKey&quot;"/>
                </onentry>
                <transition type="external" event="UNLOCK_TRUE" target="sendrequest">
                    <qt:editorinfo endTargetFactors="45.24;12.10" movePoint="-56.84;-2.27"/>
                </transition>
                <onexit>
                    <log label="wrapperLock.unlockKey" expr="&quot;Inside wrapperLock.unlockKey&quot;"/>
                </onexit>
            </state>
            <onentry>
                <log label="wrapperLock" expr="&quot;Inside wrapperLock&quot;"/>
            </onentry>
            <onexit>
                <log expr="&quot;Leaving wrapperLock&quot;" label="wrapperLock"/>
            </onexit>
            <state id="wrongKey">
                <qt:editorinfo geometry="385.83;-0.28;-60;-50;120;100" scenegeometry="852.69;-1048.11;792.69;-1098.11;120;100"/>
                <transition type="external" event="TICK" target="idle">
                    <qt:editorinfo endTargetFactors="21.57;82.47" localGeometry="0;-313.64"/>
                </transition>
                <onentry>
                    <log label="wrapperLock.wrongKey" expr="&quot;Inside wrapperLock.wrongKey&quot;"/>
                </onentry>
                <onexit>
                    <log label="wrapperLock.wrongKey" expr="&quot;Leaving wrapperLock.wrongKey&quot;"/>
                </onexit>
            </state>
        </state>
        <state id="wrapperUnlock_2" initial="lockKey_2">
            <qt:editorinfo geometry="-172.01;1185.74;271.71;-238.24;406.80;622.21" scenegeometry="-62.21;984.31;209.50;746.07;406.80;622.21"/>
            <state id="lockKey_2">
                <qt:editorinfo geometry="520.50;-106.86;-149.11;-54.05;169.11;120.05" scenegeometry="458.29;877.45;309.18;823.40;169.11;120.05"/>
                <transition type="external" event="LOCK_FALSE" target="lockKey_2">
                    <qt:editorinfo endTargetFactors="12.65;49.12"/>
                </transition>
                <transition type="external" event="LOCK_TRUE" target="readData_2">
                    <qt:editorinfo endTargetFactors="49.26;9.39"/>
                </transition>
                <onentry>
                    <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.lock(skillID, &quot;navigation&quot;);

                   if(ret.reqEval != VALID){ 
                        //rimani nello stato lockKey
	//gestire la differenza tra key invalida e cliente non autorizzato??
                       qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event LOCK_FALSE submitted&quot;;
                            QScxmlEvent *e = new QScxmlEvent;
                            e-&gt;setName(&quot;LOCK_FALSE&quot;);
                            e-&gt;setEventType(QScxmlEvent::InternalEvent);
                            e-&gt;setDelay(500);
                            stateMachine()-&gt;submitEvent(e);
                       }
                    else{
	//vai nello stato readData
                         QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event LOCK_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;LOCK_TRUE&quot;);
                    });
                     }</script>
                    <log label="wrapperUnlock_2.lockKey_2" expr="&quot;Inside wrapperUnlock_2.lockKey_2&quot;"/>
                </onentry>
                <onexit>
                    <log label="wrapperUnlock_2.lockKey_2" expr="&quot;Leaving wrapperUnlock_2.lockKey_2&quot;"/>
                </onexit>
            </state>
            <state id="readData_2">
                <qt:editorinfo geometry="575.28;21.34;-247.92;-50;267.92;100" scenegeometry="513.07;1005.65;265.15;955.65;267.92;100"/>
                <transition type="external" event="DATA_READ" target="writeData_2"/>
                <onentry>
                    <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataInt32 ret = blackboard.readDataInt32(skillID, &quot;navigation&quot;);

                   if(ret.reqEval ==VALID){
	     currVal = ret.dataValue;
	       //vai allo stato writeData
                         QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event DATA_READ submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;DATA_READ&quot;);
                    });

                    }
                    else{
	//error??
                     }</script>
                    <log label="wrapperUnlock_2.readData_2" expr="&quot;Inside wrapperUnlock_2.readData_2&quot;"/>
                </onentry>
                <onexit>
                    <log label="wrapperUnlock_2.readData_2" expr="&quot;Leaving wrapperUnlock_2.readData_2&quot;"/>
                </onexit>
            </state>
            <state id="writeData_2">
                <qt:editorinfo geometry="558.43;156.53;-189.06;-50;209.06;100" scenegeometry="496.22;1140.84;307.16;1090.84;209.06;100"/>
                <transition type="external" event="WRITE_DATA_TRUE" target="unlockKey_2"/>
                <onentry>
                    <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.writeDataInt32(skillID, &quot;navigation&quot;, currVal+1);

                   if(ret.reqEval ==VALID){
	 //vai allo stato unlockKey
 QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event WRITE_DATA_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;WRITE_DATA_TRUE&quot;);
                    });
                    }
                    else{
	//error??
                     }</script>
                    <log label="wrapperUnlock_2.writeData_2" expr="&quot;Inside wrapperUnlock_2.writeData_2&quot;"/>
                </onentry>
                <onexit>
                    <log label="wrapperUnlock_2.writeData_2" expr="&quot;Leaving wrapperUnlock_2.writeData_2&quot;"/>
                </onexit>
            </state>
            <state id="unlockKey_2">
                <qt:editorinfo geometry="530.67;296.46;-167.50;-50;187.50;116" scenegeometry="460.38;1280.77;292.88;1230.77;187.50;116"/>
                <transition type="external" event="UNLOCK_FALSE" target="unlockKey_2">
                    <qt:editorinfo endTargetFactors="12.72;34.11"/>
                </transition>
                <onentry>
                    <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.unlock(skillID, &quot;navigation&quot;);

                   if(ret.reqEval != VALID){ 
	//rimani nello stato unlockKey
	//gestire la differenza tra key invalida e cliente non autorizzato??
qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event UNLOCK_FALSE submitted&quot;;
                            QScxmlEvent *e = new QScxmlEvent;
                            e-&gt;setName(&quot;UNLOCK_FALSE&quot;);
                            e-&gt;setEventType(QScxmlEvent::InternalEvent);
                            e-&gt;setDelay(500);
                            stateMachine()-&gt;submitEvent(e);
                    }
                    else{
	//esci dal wrapperLock e manda la request alla navigation
QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event UNLOCK_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;UNLOCK_TRUE&quot;);
                    });
                     }</script>
                    <log label="wrapperUnlock_2.unlockKey_2" expr="&quot;Inside wrapperUnlock_2.unlockKey_2&quot;"/>
                </onentry>
                <transition type="external" event="UNLOCK_TRUE" target="success">
                    <qt:editorinfo endTargetFactors="73.60;67.94"/>
                </transition>
                <onexit>
                    <log label="wrapperUnlock_2.unlockKey_2" expr="&quot;Leaving wrapperUnlock_2.unlockKey_2&quot;"/>
                </onexit>
            </state>
            <onentry>
                <log label="wrapperUnlock_2" expr="&quot;Inside wrapperUnlock_2&quot;"/>
            </onentry>
            <onexit>
                <log expr="&quot;Leaving wrapperUnlock_2&quot;" label="wrapperUnlock_2"/>
            </onexit>
        </state>
        <state id="failure">
            <qt:editorinfo geometry="1912.50;1478.66;-60;-50;120;100" scenegeometry="2022.30;1277.23;1962.30;1227.23;120;100"/>
            <onentry>
                <log label="wrapper.failure" expr="&quot;Inside failure&quot;"/>
            </onentry>
            <onexit>
                <log label="wrapper.failure" expr="&quot;Leaving failure&quot;"/>
            </onexit>
            <transition type="internal" event="TICK" target="idle">
                <qt:editorinfo localGeometry="0;-2690.83"/>
            </transition>
        </state>
        <state id="wrapperUnlock_1" initial="lockKey_1">
            <qt:editorinfo geometry="1065.48;1177.87;271.71;-253.79;406.80;637.76" scenegeometry="1175.28;976.44;1446.99;722.65;406.80;637.76"/>
            <state id="lockKey_1">
                <qt:editorinfo geometry="518.30;-121.47;-149.11;-54.05;169.11;120.05" scenegeometry="1685.50;854.97;1536.39;800.92;169.11;120.05"/>
                <transition type="external" event="LOCK_FALSE" target="lockKey_1">
                    <qt:editorinfo endTargetFactors="12.65;49.12"/>
                </transition>
                <transition type="external" event="LOCK_TRUE" target="readData_1">
                    <qt:editorinfo endTargetFactors="49.26;9.39"/>
                </transition>
                <onentry>
                    <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.lock(skillID, &quot;navigation&quot;);

                   if(ret.reqEval != VALID){ 
                        //rimani nello stato lockKey
	//gestire la differenza tra key invalida e cliente non autorizzato??
                       qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event LOCK_FALSE submitted&quot;;
                            QScxmlEvent *e = new QScxmlEvent;
                            e-&gt;setName(&quot;LOCK_FALSE&quot;);
                            e-&gt;setEventType(QScxmlEvent::InternalEvent);
                            e-&gt;setDelay(500);
                            stateMachine()-&gt;submitEvent(e);
                       }
                    else{
	//vai nello stato readData
                         QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event LOCK_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;LOCK_TRUE&quot;);
                    });
                     }</script>
                    <log label="wrapperUnlock_1.lockKey_1" expr="&quot;Inside wrapperUnlock_1.lockKey_1&quot;"/>
                </onentry>
                <onexit>
                    <log label="wrapperUnlock_1.lockKey_1" expr="&quot;Leaving wrapperUnlock_1.lockKey_1&quot;"/>
                </onexit>
            </state>
            <state id="readData_1">
                <qt:editorinfo geometry="575.28;21.34;-247.92;-50;267.92;100" scenegeometry="1742.48;997.78;1494.56;947.78;267.92;100"/>
                <transition type="external" event="DATA_READ" target="writeData_1"/>
                <onentry>
                    <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataInt32 ret = blackboard.readDataInt32(skillID, &quot;navigation&quot;);

                   if(ret.reqEval ==VALID){
	     currVal = ret.dataValue;
	       //vai allo stato writeData
                         QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event DATA_READ submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;DATA_READ&quot;);
                    });

                    }
                    else{
	//error??
                     }</script>
                    <log label="wrapperUnlock_1.readData_1" expr="&quot;Inside wrapperUnlock_1.readData_1&quot;"/>
                </onentry>
                <onexit>
                    <log label="wrapperUnlock_1.readData_1" expr="&quot;Leaving wrapperUnlock_1.readData_1&quot;"/>
                </onexit>
            </state>
            <state id="writeData_1">
                <qt:editorinfo geometry="558.43;156.53;-189.06;-50;209.06;100" scenegeometry="1725.63;1132.97;1536.57;1082.97;209.06;100"/>
                <transition type="external" event="WRITE_DATA_TRUE" target="unlockKey_1"/>
                <onentry>
                    <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.writeDataInt32(skillID, &quot;navigation&quot;, currVal+1);

                   if(ret.reqEval ==VALID){
	 //vai allo stato unlockKey
 QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event WRITE_DATA_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;WRITE_DATA_TRUE&quot;);
                    });
                    }
                    else{
	//error??
                     }</script>
                    <log label="wrapperUnlock_1.writeData_1" expr="&quot;Inside wrapperUnlock_1.writeData_1&quot;"/>
                </onentry>
                <onexit>
                    <log label="wrapperUnlock_1.writeData_1" expr="&quot;Leaving wrapperUnlock_1.writeData_1&quot;"/>
                </onexit>
            </state>
            <state id="unlockKey_1">
                <qt:editorinfo geometry="530.67;296.46;-167.50;-50;187.50;116" scenegeometry="1697.87;1272.90;1530.37;1222.90;187.50;116"/>
                <transition type="external" event="UNLOCK_FALSE" target="unlockKey_1">
                    <qt:editorinfo endTargetFactors="12.72;34.11"/>
                </transition>
                <onentry>
                    <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.unlock(skillID, &quot;navigation&quot;);

                   if(ret.reqEval != VALID){ 
	//rimani nello stato unlockKey
	//gestire la differenza tra key invalida e cliente non autorizzato??
qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event UNLOCK_FALSE submitted&quot;;
                            QScxmlEvent *e = new QScxmlEvent;
                            e-&gt;setName(&quot;UNLOCK_FALSE&quot;);
                            e-&gt;setEventType(QScxmlEvent::InternalEvent);
                            e-&gt;setDelay(500);
                            stateMachine()-&gt;submitEvent(e);
                    }
                    else{
	//esci dal wrapperLock e manda la request alla navigation
QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event UNLOCK_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;UNLOCK_TRUE&quot;);
                    });
                     }</script>
                    <log label="wrapperUnlock_1.unlockKey_1" expr="&quot;Inside wrapperUnlock_1.unlockKey_1&quot;"/>
                </onentry>
                <transition type="external" event="UNLOCK_TRUE" target="failure"/>
                <onexit>
                    <log label="wrapperUnlock_1.unlockKey_1" expr="&quot;Leaving wrapperUnlock_1.unlockKey_1&quot;"/>
                </onexit>
            </state>
            <onentry>
                <log label="wrapperUnlock_1" expr="&quot;Inside wrapperUnlock_1&quot;"/>
            </onentry>
            <onexit>
                <log expr="&quot;Leaving wrapperUnlock_1&quot;" label="wrapperUnlock_1"/>
            </onexit>
        </state>
    </state>
    <state id="wrapperUnlock_3" initial="lockKey_3">
        <qt:editorinfo geometry="2053.91;-200.20;271.71;-238.26;406.80;622.54" scenegeometry="2053.91;-200.20;2325.62;-438.46;406.80;622.54"/>
        <state id="lockKey_3">
            <qt:editorinfo geometry="520.50;-106.86;-149.11;-54.05;169.11;120.05" scenegeometry="2574.41;-307.06;2425.30;-361.11;169.11;120.05"/>
            <transition type="external" event="LOCK_FALSE" target="lockKey_3">
                <qt:editorinfo endTargetFactors="12.65;49.12"/>
            </transition>
            <transition type="external" event="LOCK_TRUE" target="readData_3">
                <qt:editorinfo endTargetFactors="49.26;9.39"/>
            </transition>
            <onentry>
                <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.lock(skillID, &quot;navigation&quot;);

                   if(ret.reqEval != VALID){ 
                        //rimani nello stato lockKey
	//gestire la differenza tra key invalida e cliente non autorizzato??
                       qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event LOCK_FALSE submitted&quot;;
                            QScxmlEvent *e = new QScxmlEvent;
                            e-&gt;setName(&quot;LOCK_FALSE&quot;);
                            e-&gt;setEventType(QScxmlEvent::InternalEvent);
                            e-&gt;setDelay(500);
                            stateMachine()-&gt;submitEvent(e);
                       }
                    else{
	//vai nello stato readData
                         QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event LOCK_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;LOCK_TRUE&quot;);
                    });
                     }</script>
                <log label="wrapperUnlock_3.lockKey_3" expr="&quot;Inside wrapperUnlock_3.lockKey_3&quot;"/>
            </onentry>
            <onexit>
                <log label="wrapperUnlock_3.lockKey_3" expr="&quot;Leaving wrapperUnlock_3.lockKey_3&quot;"/>
            </onexit>
        </state>
        <state id="readData_3">
            <qt:editorinfo geometry="575.28;21.34;-247.92;-50;267.92;100" scenegeometry="2629.19;-178.86;2381.27;-228.86;267.92;100"/>
            <transition type="external" event="DATA_READ" target="writeData_3"/>
            <onentry>
                <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataInt32 ret = blackboard.readDataInt32(skillID, &quot;navigation&quot;);

                   if(ret.reqEval ==VALID){
	     currVal = ret.dataValue;
	       //vai allo stato writeData
                         QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event DATA_READ submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;DATA_READ&quot;);
                    });

                    }
                    else{
	//error??
                     }</script>
                <log label="wrapperUnlock_3.readData_3" expr="&quot;Inside wrapperUnlock_3.readData_3&quot;"/>
            </onentry>
            <onexit>
                <log label="wrapperUnlock_3.readData_3" expr="&quot;Leaving wrapperUnlock_3.readData_3&quot;"/>
            </onexit>
        </state>
        <state id="writeData_3">
            <qt:editorinfo geometry="559.64;156.53;-189.06;-50;209.06;100" scenegeometry="2613.55;-43.67;2424.49;-93.67;209.06;100"/>
            <transition type="external" event="WRITE_DATA_TRUE" target="unlockKey_3"/>
            <onentry>
                <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.writeDataInt32(skillID, &quot;navigation&quot;, currVal+1);

                   if(ret.reqEval ==VALID){
	 //vai allo stato unlockKey
 QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event WRITE_DATA_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;WRITE_DATA_TRUE&quot;);
                    });
                    }
                    else{
	//error??
                     }</script>
                <log label="wrapperUnlock_3.writeData_3" expr="&quot;Inside wrapperUnlock_3.writeData_3&quot;"/>
            </onentry>
            <onexit>
                <log label="wrapperUnlock_3.writeData_3" expr="&quot;Leaving wrapperUnlock_3.writeData_3&quot;"/>
            </onexit>
        </state>
        <state id="unlockKey_3">
            <qt:editorinfo geometry="532.49;298.28;-167.50;-50;187.50;116" scenegeometry="2586.40;98.08;2418.90;48.08;187.50;116"/>
            <transition type="external" event="UNLOCK_FALSE" target="unlockKey_3">
                <qt:editorinfo endTargetFactors="12.72;34.11"/>
            </transition>
            <onentry>
                <script>Connector connection(blackboard_port.getName(), &quot;/BlackboardComponent&quot;, &quot;tcp&quot;);

                    DataBool ret = blackboard.unlock(skillID, &quot;navigation&quot;);

                   if(ret.reqEval != VALID){ 
	//rimani nello stato unlockKey
	//gestire la differenza tra key invalida e cliente non autorizzato??
qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event UNLOCK_FALSE submitted&quot;;
                            QScxmlEvent *e = new QScxmlEvent;
                            e-&gt;setName(&quot;UNLOCK_FALSE&quot;);
                            e-&gt;setEventType(QScxmlEvent::InternalEvent);
                            e-&gt;setDelay(500);
                            stateMachine()-&gt;submitEvent(e);
                    }
                    else{
	//esci dal wrapperLock e manda la request alla navigation
QTimer::singleShot(0, stateMachine(), [&amp;](){
                        qDebug() &lt;&lt; QTime::currentTime().toString() &lt;&lt; &quot;Event UNLOCK_TRUE submitted&quot;;
                        stateMachine()-&gt;submitEvent(&quot;UNLOCK_TRUE&quot;);
                    });
                     }</script>
                <log label="wrapperUnlock_3.unlockKey_3" expr="&quot;Inside wrapperUnlock_3.unlockKey_3&quot;"/>
            </onentry>
            <transition type="external" event="UNLOCK_TRUE" target="wrapper">
                <qt:editorinfo endTargetFactors="98.72;57.74"/>
            </transition>
            <onexit>
                <log label="wrapperUnlock_3.unlockKey_3" expr="&quot;Leaving wrapperUnlock_3.unlockKey_3&quot;"/>
            </onexit>
        </state>
        <onentry>
            <log label="wrapperUnlock_3" expr="&quot;Inside wrapperUnlock_3&quot;"/>
        </onentry>
        <onexit>
            <log expr="&quot;Leaving wrapperUnlock_3&quot;" label="wrapperUnlock_3"/>
        </onexit>
    </state>
</scxml>
